{
  "comments": [
    {
      "title": "graph名称",
      "endpoints": ["机器名或者tag标识，tag之间用空格分隔"],
      "counters": ["counter名称"],
      "graph_type": "展示类型，endpoint视角为h，counters视角为k,组合视角为a",
      "method": "绘图是否进行求和，求和填写sum，不求和填写空字符串",
      "timespan": "展示的时间跨度，单位为秒"
    }
  ],
  "version": "20180625",
  "graphs": [
    {
      "title": "集群可用度（单位：百分比*10000；1M表示100%）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*cluster.available.minute/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各操作总QPS（统计get、multi_get、put、multi_put、remove、multi_remove、scan各操作的总QPS）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.get_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_get_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.put_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_put_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.remove_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_remove_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.incr_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.check_and_set_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.scan_qps#_all_/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "集群Load-Balance状态（待执行的balance操作数、已执行的balance操作数等）",
      "endpoints": ["cluster=${cluster.name} job=meta service=pegasus"],
      "counters": [
          "meta*eon.greedy_balancer*balance_operation_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.greedy_balancer*recent_balance_move_primary_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.greedy_balancer*recent_balance_copy_primary_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.greedy_balancer*recent_balance_copy_secondary_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各ReplicaServer内存用量（单位：MB）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*server*memused.res(MB)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点存储使用率（百分比）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "df.bytes.used.percent/fstype=ext4,mount=/home",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd1",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd2",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd3",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd4",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd5",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd6",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd7",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd8",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd9",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd10",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd11",
          "df.bytes.used.percent/fstype=ext4,mount=/home/work/ssd12"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点内存使用率（百分比）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "mem.memused.percent"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各表存储用量（统计各表的单备份数据存储用量；单位：MB）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.storage_mb#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各表RocksDB缓存命中率（统计各表的RocksDB Block Cache命中率；单位：百分比*10000；1M表示100%）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.rdb_block_cache_hit_rate#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Get 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_GET.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 MultiGet 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_GET.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Set 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_PUT.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 MultiSet 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_PUT.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Del 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_REMOVE.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 MultiDel 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_REMOVE.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Incr 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_INCR.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 CheckAndSet 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_CHECK_AND_SET.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 CheckAndMutate 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_CHECK_AND_MUTATE.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Scan 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_SCAN.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Prepare 发送端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_PREPARE_ACK.latency.client(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 Prepare 服务端延迟（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_PREPARE.latency.server/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点Replica个数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*replica(Count)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点Commit QPS",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*replicas.commit.qps/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点SharedLog大小（单位：MB）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*shared.log.size(MB)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点SharedLog最近写入字节数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*shared.log.recent.write.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "集群Partition健康状况（处于heathy、writable_ill、unwritable、unreadable、dead状态的partition个数）",
      "endpoints": ["cluster=${cluster.name} job=meta service=pegasus"],
      "counters": [
          "meta*eon.server_state*dead_partition_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*unreadable_partition_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*unwritable_partition_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*writable_ill_partition_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*healthy_partition_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "集群Config更新情况（节点失联个数、config变化次数等）",
      "endpoints": ["cluster=${cluster.name} job=meta service=pegasus"],
      "counters": [
          "meta*eon.meta_service*recent_disconnect_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.meta_service*unalive_nodes/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*recent_update_config_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*recent_partition_change_unwritable_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_state*recent_partition_change_writable_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus",
          "meta*eon.server_load_balancer*recent_choose_primary_fail_count/cluster=${cluster.name},job=meta,port=${meta.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点ReplicaServer异常统计（心跳失败次数、Prepare失败次数、Error文件夹个数、Garbage文件夹个数等）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.failure_detector*recent_beacon_fail_count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.error.replica.dir.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.garbage.replica.dir.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.recent.prepare.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.recent.replica.move.error.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.recent.replica.move.garbage.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.recent.replica.remove.dir.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点Learning相关统计（执行次数、执行时间、传输数据量等）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.nfs_client*recent_copy_data_size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.nfs_client*recent_copy_fail_count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.nfs_client*recent_write_data_size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.nfs_client*recent_write_fail_count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.nfs_server*recent_copy_data_size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.nfs_server*recent_copy_fail_count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.max.copy.file.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.max.duration.time(ms)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.copy.buffer.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.copy.file.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.copy.file.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.app.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.cache.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.log.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.reset.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.learn.succ.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.round.start.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*replicas.learning.recent.start.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点Cold-Backup相关统计（执行次数、执行时间、上传数据量等）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*cold.backup.max.duration.time.ms/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.max.upload.file.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.cancel.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.pause.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.start.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.succ.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.upload.file.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.upload.file.size/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.recent.upload.file.succ.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*cold.backup.running.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点Manual-Compact相关统计（当前执行个数等）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*manual.compact.running.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "CPU Busy",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "cpu.busy"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Network Dropped",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "net.if.total.dropped/iface=eth0"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Network In Bytes",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "net.if.in.bytes/iface=eth0"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Network Out Bytes",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "net.if.out.bytes/iface=eth0"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "SSD Util",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "disk.io.util/device=sdb",
          "disk.io.util/device=sdc",
          "disk.io.util/device=sdd",
          "disk.io.util/device=sde",
          "disk.io.util/device=sdf",
          "disk.io.util/device=sdg",
          "disk.io.util/device=sdh",
          "disk.io.util/device=sdi",
          "disk.io.util/device=sdj",
          "disk.io.util/device=sdk",
          "disk.io.util/device=sdl",
          "disk.io.util/device=sdm",
          "disk.io.util/device=vda",
          "disk.io.util/device=vdb",
          "disk.io.util/device=vdc",
          "disk.io.util/device=vdd",
          "disk.io.util/device=vde",
          "disk.io.util/device=xvda",
          "disk.io.util/device=xvdb",
          "disk.io.util/device=xvdc",
          "disk.io.util/device=xvdd",
          "disk.io.util/device=xvde"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "SSD Await",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "disk.io.await/device=sdb",
          "disk.io.await/device=sdc",
          "disk.io.await/device=sdd",
          "disk.io.await/device=sde",
          "disk.io.await/device=sdf",
          "disk.io.await/device=sdg",
          "disk.io.await/device=sdh",
          "disk.io.await/device=sdi",
          "disk.io.await/device=sdj",
          "disk.io.await/device=sdk",
          "disk.io.await/device=sdl",
          "disk.io.await/device=sdm",
          "disk.io.await/device=vda",
          "disk.io.await/device=vdb",
          "disk.io.await/device=vdc",
          "disk.io.await/device=vdd",
          "disk.io.await/device=vde",
          "disk.io.await/device=xvda",
          "disk.io.await/device=xvdb",
          "disk.io.await/device=xvdc",
          "disk.io.await/device=xvdd",
          "disk.io.await/device=xvde"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Flush次数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*recent.flush.completed.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Compaction次数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*recent.compaction.completed.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Flush写出字节数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*recent.flush.output.bytes/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Compaction写入写出字节数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*recent.compaction.input.bytes/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*app.pegasus*recent.compaction.output.bytes/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Emergency Checkpoint触发次数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*recent.trigger.emergency.checkpoint.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近Write Stall触发次数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*app.pegasus*recent.write.change.delayed.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*app.pegasus*recent.write.change.stopped.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 单条读 排队时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_GET.queue(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 单条读 执行时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_GET.exec(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 多条读 排队时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_GET.queue(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 多条读 执行时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_GET.exec(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 单条写 排队时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_PUT.queue(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 单条写 执行时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_PUT.exec(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 多条写 排队时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_PUT.queue(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "P99 多条写 执行时间（单位：纳秒）",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "zion*profiler*RPC_RRDB_RRDB_MULTI_PUT.exec(ns)/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "各节点最近读写失败次数",
      "endpoints": ["cluster=${cluster.name} job=replica service=pegasus"],
      "counters": [
          "replica*eon.replica_stub*recent.read.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus",
          "replica*eon.replica_stub*recent.write.fail.count/cluster=${cluster.name},job=replica,port=${replica.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "异常查询条数（统计各表最近10秒执行时间超过100毫秒的查询条数）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.recent_abnormal_count#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Expire数据条数（统计各表最近10秒查询的过期数据条数）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.recent_expire_count#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Filter数据条数（统计各表最近10秒过滤的数据条数）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.recent_filter_count#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Delay数据条数（统计各表最近10秒write throttling delay的数据条数）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.recent_write_throttling_delay_count#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "Reject数据条数（统计各表最近10秒write throttling reject的数据条数）",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.recent_write_throttling_reject_count#${for.each.table}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    },
    {
      "title": "【${for.each.table}】单表QPS",
      "endpoints": ["cluster=${cluster.name} job=collector service=pegasus"],
      "counters": [
          "collector*app.pegasus*app.stat.get_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_get_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.put_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_put_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.remove_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.multi_remove_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.incr_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.check_and_set_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus",
          "collector*app.pegasus*app.stat.scan_qps#${table.name}/cluster=${cluster.name},job=collector,port=${collector.port},service=pegasus"
      ],
      "graph_type": "a",
      "method": "",
      "timespan": 86400
    }
  ]
}
